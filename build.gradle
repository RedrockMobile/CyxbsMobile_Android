// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.alibaba.arouter'

buildscript {
    apply from: 'versions.gradle'
    ext.plugin_version="0.1.0"

    ext {
        lib_config = "${rootDir}/lib_config.gradle"
        module_config = "${rootDir}/module_config.gradle"
        module_dependencies = "${rootDir}/dependencies.gradle"
        secret = "${rootDir}/secret.gradle"
    }

    repositories {
        google()
        jcenter()
        maven { url "https://dl.bintray.com/tellh/maven" }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/releases/' }


        maven { url 'https://dl.bintray.com/umsdk/release' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_plugins"
        classpath deps.kotlin.gradle
        classpath "com.alibaba:arouter-register:1.0.2"
        //walle多渠道打包
        classpath 'com.meituan.android.walle:plugin:1.1.6'
        // 添加emas-services插件
        classpath 'com.aliyun.ams:emas-services:1.0.1'
        // AndResGuard
        classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.17'
        // bytex
        classpath "com.bytedance.android.byteX:base-plugin:${plugin_version}"
        classpath "com.bytedance.android.byteX:method-call-opt-plugin:${plugin_version}"
        classpath "com.bytedance.android.byteX:access-inline-plugin:${plugin_version}"
        classpath "com.bytedance.android.byteX:field-assign-opt-plugin:${plugin_version}"
        classpath "com.bytedance.android.byteX:const-inline-plugin:${plugin_version}"
        classpath "com.bytedance.android.byteX:shrink-r-plugin:${plugin_version}"
        classpath "com.bytedance.android.byteX:getter-setter-inline-plugin:${plugin_version}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://dl.bintray.com/tellh/maven" }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/releases/' }
        maven { url 'https://dl.bintray.com/umsdk/release' }
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}